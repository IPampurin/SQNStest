name: Go with MySQL 8.0.43

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.24.x]

    services:
      mysql:
        image: mysql:8.0.43
        env:
          MYSQL_ROOT_PASSWORD: rootpassword123
          MYSQL_DATABASE: SQNS_DB
          MYSQL_USER: SQNS_User
          MYSQL_PASSWORD: 123
          MYSQL_TZ: system
          MYSQL_INITDB_SKIP_TEST_DATA: "yes"
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Display Go version
        run: go version

      - name: Install dependencies
        run: go mod tidy

      - name: Wait for MySQL to start
        run: |
          max_attempts=120
          attempt=0
          until nc -z services.mysql.port-3306 3306 || $attempt -eq $max_attempts ; do
            echo "Waiting for MySQL to start... (attempt $attempt)"
            sleep 5
            attempt=$((attempt + 1))
          done
          if [ $attempt -eq $max_attempts ]; then
            echo "MySQL failed to start after 600 seconds"
            exit 1
          fi

      - name: Verify MySQL connection
        run: |
          mysql -h services.mysql.port-3306 -uroot -prootpassword123 -e "SHOW DATABASES;"
          mysql -h services.mysql.port-3306 -uSQNS_User -p123 -e "SHOW DATABASES;"

      - name: Set environment variables
        run: |
          echo "SQNStest_MYSQL_ROOT_PASSWORD=rootpassword123" >> $GITHUB_ENV
          echo "SQNStest_DB_HOST_PORT=services.mysql.port-3306" >> $GITHUB_ENV
          echo "SQNStest_MYSQL_USER=SQNS_User" >> $GITHUB_ENV
          echo "SQNStest_MYSQL_PASSWORD=123" >> $GITHUB_ENV

      - name: Run local server
        run: |
          CGO_ENABLED=0 GOOS=linux go run main.go &
          sleep 50
          go test -run ^TestServer$ ./tests

      - name: Run database tests
        run: |
          go test -run ^TestInitDB$ ./tests
          go test -run ^TestCheckTableExists$ ./tests
          go test -run ^TestIndexes$ ./tests
